<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caterbao.lumos.locals.dal.mapper.BookerStockMapper">
    <select id="find" resultType="com.caterbao.lumos.locals.dal.pojo.BookerStock" parameterType="com.caterbao.lumos.locals.dal.LumosSelective">
        select ${fields} from BookerStock where 1=1
        <if test="where.MerchId != null">and MerchId =#{where.MerchId}</if>
        <if test="where.StoreId != null">and StoreId =#{where.StoreId}</if>
        <if test="where.ShopId != null">and ShopId =#{where.ShopId}</if>
        <if test="where.DeviceId != null">and DeviceId =#{where.DeviceId}</if>
    </select>
    <select id="findDevcieSkuStock" resultType="com.caterbao.lumos.locals.dal.vw.BookerDeviceSkuStockVw" parameterType="com.caterbao.lumos.locals.dal.LumosSelective">
        select distinct MerchId,StoreId,ShopId,DeviceId,SkuId,count(*) as Quantity from BookerStock
        where 1=1

        <if test="where.MerchId != null">and MerchId =#{where.MerchId}</if>
        <if test="where.StoreId != null">and StoreId =#{where.StoreId}</if>
        <if test="where.ShopId != null">and ShopId =#{where.ShopId}</if>
        <if test="where.DeviceId != null">and DeviceId =#{where.DeviceId}</if>

        GROUP BY MerchId,StoreId,ShopId,DeviceId,SkuId

    </select>

    <select id="getDeviceStockQuantityByDeviceId" resultType="java.lang.Long" >
        select count(*) from BookerStock where
        MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
    </select>

    <select id="getDeviceStockQuantityBySlotId" resultType="java.lang.Long" >
        select count(*) from BookerStock where
        MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
        and SlotId =#{slotId}
    </select>

    <select id="getDeviceStockQuantityBySkuId" resultType="java.lang.Long" >
      select Quantity FROM (   select distinct SkuId,count(*) as Quantity from BookerStock
                MerchId =#{merchId}
                and StoreId =#{storeId}
                and ShopId =#{shopId}
                and DeviceId =#{deviceId}
                and SkuId =#{skuId}
                GROUP BY skuId) a

    </select>

    <select id="getDeviceStockQuantityBySkuRfId" resultType="java.lang.Long" >
         select count(*) from BookerStock where
                MerchId =#{merchId}
                and StoreId =#{storeId}
                and ShopId =#{shopId}
                and DeviceId =#{deviceId}
                and skuRfId =#{skuRfId}
    </select>

    <delete id="deleteDeviceStockByDeviceId">
        delete from BookerStock where MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
    </delete>

    <delete id="deleteDeviceStockBySlotId">
        delete from BookerStock where MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
        and SlotId =#{slotId}
    </delete>

    <delete id="deleteDeviceStockBySkuId">
        delete from BookerStock where MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
        and SkuId =#{skuId}
    </delete>

    <delete id="deleteDeviceStockBySkuRfId">
        delete from BookerStock where MerchId =#{merchId}
        and StoreId =#{storeId}
        and ShopId =#{shopId}
        and DeviceId =#{deviceId}
        and SkuRfId =#{skuRfId}
    </delete>


    <insert id="insert">
        INSERT INTO BookerStock (id, merchId, storeId, shopId, deviceId,slotId,skuId,skuRfId,creator,createTime) VALUES
        (#{id},#{merchId},#{storeId},#{shopId},#{deviceId},#{slotId},#{skuId},#{skuRfId},#{creator},#{createTime})
    </insert>

    <insert id="insertBatch">
        INSERT INTO BookerStock (id, merchId, storeId, shopId, deviceId,slotId,skuId,skuRfId,creator,createTime) VALUES
        <foreach collection="list" separator="," item="item">
            (#{item.id},#{item.merchId},#{item.storeId},#{item.shopId},#{item.deviceId},#{item.slotId},#{item.skuId},#{item.skuRfId},#{item.creator},#{item.createTime})
        </foreach>
    </insert>

</mapper>
